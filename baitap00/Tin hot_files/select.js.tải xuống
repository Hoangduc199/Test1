(function($) {
    $.OSC_UI_Form_Select_Menu_Holder = $('<div />').addClass('osc-ui-frm-select-menu-holder');
    $.OSC_UI_Form_Select_Menu_Collect_Additional_Height = null;
    
    $(window.document.body).append($.OSC_UI_Form_Select_Menu_Holder);
    
    function OSC_UI_Form_Select(target, options) {
        this.render = function() {
            this.filter_frm_wrap = $('<div />').addClass('filter-frm');
            this.filter_frm = $('<input />').attr('type', 'text');
            this.filter_frm_wrap.append(this.filter_frm);
            this.toggler = $('<div />').addClass('toggler-btn').append($('<img />').attr('src', my_base_url + my_pligg_base + '/templates/images/null.png'));
            this.selected_item = $('<div />').addClass('selected-item');
            this.selected_label = $('<div />').html(this.select[0].options[this.select[0].selectedIndex].label);
            
            this.selected_item.append(this.selected_label);
            this.container.append(this.filter_frm_wrap);
            this.container.append(this.toggler);
            this.container.append(this.selected_item);
            
            if(this.select.css('width')) {
                this.container.width(parseInt(this.select.css('width')));
            }
            
            var self = this;
            
            this.select.bind('change', function() {
                    var label = this.options[this.selectedIndex].label;                
                    self.selected_label.html(label).attr('title', label);
                })
                .bind('focus', function() {
                    self._hide_selector = true;
                    $(self.container).trigger('click');
                });
            
            $(this.container).osc_toggleMenu({
                menu : $.OSC_UI_Form_Select_Menu_Holder,
                toggle_mode : 3,
                divergent_x : -2,
                open_hook : function() {
                    var toggleMenuInst = this;
                    
                    self.filter_frm_wrap.addClass('active');
                    self.filter_frm.addClass('desc').val('Điền từ khóa để tìm kiếm').keydown(function(e) {
                        if(e.keyCode == 13) {
                            e.preventDefault();
                            return false;
                        }
                        
                        var frm = $(this);
                        
                        var val = frm.val();
                        
                        if(frm.hasClass('desc')) {
                            frm.val('').removeClass('desc');
                        }
                    }).keyup(function() {
                        clearTimeout(self._filter_timer);
                            
                        if(self._lock_filter) {
                            self._filter_timer = setTimeout(function() { self.processFilter(input, toggleMenuInst); }, 500);
                        } else {           
                            self._lock_filter = true;
                            setTimeout(function() { self.processFilter(input, toggleMenuInst); }, 50);
                        }
                        
                        var frm = $(this);
                        
                        if(frm.val() == '') {
                            frm.val('Điền từ khóa để tìm kiếm').addClass('desc');
                            
                            if (this.createTextRange) {
                                var part = this.createTextRange();

                                part.move("character", 0);
                                part.select();
                            } else if (this.setSelectionRange) {
                                this.setSelectionRange(0, 0);
                            }
                        }
                        
                        var input = this;    
                    });
                    
                    if (self.filter_frm[0].createTextRange) {
                        var part = self.filter_frm[0].createTextRange();
                        
                        part.move("character", 0);
                        part.select();
                    } else if (self.filter_frm[0].setSelectionRange) {
                        self.filter_frm[0].setSelectionRange(0, 0);
                    }

                    self.filter_frm[0].focus();
                    
                    $.OSC_UI_Form_Select_Menu_Holder.html('');
                    
                    var close_toggle_menu = function() {
                        toggleMenuInst.hide();
                        $(window).unbind('scroll', close_toggle_menu);
                    }
                    
                    $(window).scroll(close_toggle_menu);
                    
                    var wrap = $('<div />');
                    var container = $('<div />');
                    
                    $.OSC_UI_Form_Select_Menu_Holder.append(wrap);
                    wrap.append(container);
                    
                    if(typeof self.dropbox_item_before_render == 'function') {
                        var item = self.dropbox_item_before_render({
                            wrap : wrap,
                            container : container
                        });
                    }
                    
                    var option_groups = [{label : '', items : []}];
                    var group_idx = 0;
                    var select = self.select[0];

                    for(var x = 0; x < select.childNodes.length; x ++) {
                        if(select.childNodes[x].tagName == 'OPTION') {
                            option_groups[group_idx].items.push(select.childNodes[x]);
                        } else if(select.childNodes[x].tagName == 'OPTGROUP') {
                            option_groups.push({label : select.childNodes[x].label, items : []});
                            group_idx ++;

                            for(var y = 0; y < select.childNodes[x].childNodes.length; y ++) {
                                if(select.childNodes[x].childNodes[y].tagName == 'OPTION') {
                                    option_groups[group_idx].items.push(select.childNodes[x].childNodes[y]);
                                }
                            }

                            option_groups.push({label : '', items : []});
                            group_idx ++;
                        }
                    }
                    
                    for(var x = 0; x < option_groups.length; x ++) {                        
                        if(typeof self.dropbox_group_label_render == 'function') {
                            var group = self.dropbox_group_label_render(option_groups[x].label);
                        } else {
                            var group = $('<div />').addClass('osc-ui-frm-select-menu-group');
                            
                            var group_label = $('<div />').append($('<div />').html(option_groups[x].label)).addClass('osc-ui-frm-select-menu-group-label');
                            
                            if(option_groups[x].label == '') {
                                group_label.addClass('no-label');
                            }
                            
                            group_label.css('min-width', $(toggleMenuInst.toggler).width() + 'px').appendTo(group);
                        }
                        
                        group.addClass('mrk-osc-ui-frm-select-menu-group').appendTo(container);

                        for(var y = 0; y < option_groups[x].items.length; y ++) {
                            var opt_item = option_groups[x].items[y];
                            
                            var label = opt_item.label;
                            
                            if(typeof self.dropbox_item_render == 'function') {
                                var item = self.dropbox_item_render(opt_item);
                            } else {
                                var item = $('<div />').append($('<div />').html(label)).addClass('osc-ui-frm-select-menu-item');
                                item.css('min-width', $(toggleMenuInst.toggler).width() + 'px');
                            }

                            item.addClass('mrk-osc-ui-frm-select-menu-item')
                                .attr('title', label)
                                .attr('rel', opt_item.index)
                                .click(function() {
                                    self.select[0].options[$(this).attr('rel')].selected = true;
                                    self.select.trigger('change');
                                    close_toggle_menu();
                                });

                            group.append(item);
                        }
                    }
                    
                    wrap.css('width', wrap.width() + 'px');
                },
                after_open_hook : function(toggleMenuInst) {
                    var toggleMenuInst = this;

                    var item_wrap = $('> div', $.OSC_UI_Form_Select_Menu_Holder[0]);
                    var item_height = $('.mrk-osc-ui-frm-select-menu-item', item_wrap[0]).height();
                    
                    var max_item_display = Math.floor(($(window).height()-($(toggleMenuInst.menu).offset().top-$(window).scrollTop())-(typeof $.OSC_UI_Form_Select_Menu_Collect_Additional_Height == 'function' ? $.OSC_UI_Form_Select_Menu_Collect_Additional_Height() : 0))/item_height);
                    
                    var max_height = max_item_display * item_height;
                    
                    if(self.max_height) {
                        if(max_height > self.max_height) {
                            max_height = self.max_height;
                        }
                    }
                    
                    item_wrap.css('max-height', max_height + 'px').osc_scroller();
                    
                    if(self._hide_selector) {
                        $.OSC_UI_Form_Select_Menu_Holder.css('display', 'none');
                    }
                },
                close_hook : function(toggleMenuInst) {
                    self._hide_selector = false;
                    $.OSC_UI_Form_Select_Menu_Holder.html('').css('display', '');
                    self.filter_frm_wrap.removeClass('active');
                    self.filter_frm.unbind('keyup').unbind('keydown').val('');
                }
            });
        }
        
        this.processFilter = function(input, toggleMenuInst) {
            var frm = $(input);
                     
            var val = '';
            
            if(! frm.hasClass('desc')) {
                val = $.cleanVNMask(frm.val().toLowerCase().replace(/\s*/, ' ').trim());
            }

            if(val != this.last_filter_keywords) {
                this.filterItem(val == '' ? [] : val.split(' '), toggleMenuInst);
            }

            this.last_filter_keywords = val;
        }
        
        this.filterItem = function(keywords, toggleMenuInst) {
            $.OSC_UI_Form_Select_Menu_Holder.css('display', '');
            
            var group_collection = $('.mrk-osc-ui-frm-select-menu-group', $.OSC_UI_Form_Select_Menu_Holder[0]);
            
            group_collection.removeClass('first').removeClass('active');
            
            var item_collection = $('.mrk-osc-ui-frm-select-menu-item', $.OSC_UI_Form_Select_Menu_Holder[0]);
            
            item_collection.removeClass('last').removeClass('active');
            
            var scroll_to_obj = null;
            
            if(keywords.length > 0) {
                item_collection.each(function() {
                    var item = $(this);
                    var label = $.cleanVNMask(item.attr('title').toLowerCase());

                    var checked = true;

                    for(var x = 0; x < keywords.length; x ++) {
                        if(label.indexOf(keywords[x]) < 0) {
                            checked = false;
                            break;
                        }
                    }

                    if(checked) {
                        item.show().addClass('active');
                    } else {
                        item.hide();
                    }
                });
                
                group_collection.each(function() {
                    item_collection = $('.mrk-osc-ui-frm-select-menu-item.active', this);
                    
                    if(item_collection.length > 0) {
                        if(scroll_to_obj == null) {
                            scroll_to_obj = this;
                        }
                        
                        $(this).show().addClass('active');
                        $(item_collection[item_collection.length-1]).addClass('last');
                    } else {
                        $(this).hide();
                    }
                });
                
                group_collection = $('.mrk-osc-ui-frm-select-menu-group.active', $.OSC_UI_Form_Select_Menu_Holder[0]);
                
                $(group_collection[0]).addClass('first');
            } else {
                group_collection.show();
                item_collection.show();
            }
                                            
            var item_wrap = $('> div', $.OSC_UI_Form_Select_Menu_Holder[0]);
            var item_height = $('.mrk-osc-ui-frm-select-menu-item', item_wrap[0]).height();

            var max_item_display = Math.floor(($(window).height()-($(toggleMenuInst.menu).offset().top-$(window).scrollTop())-(typeof $.OSC_UI_Form_Select_Menu_Collect_Additional_Height == 'function' ? $.OSC_UI_Form_Select_Menu_Collect_Additional_Height() : 0))/item_height);

            var max_height = max_item_display * item_height;
                    
            if(this.max_height) {
                if(max_height > this.max_height) {
                    max_height = this.max_height;
                }
            }
                    
            item_wrap.css('max-height', max_height + 'px').osc_scroller('reset');
            
            if(scroll_to_obj != null) {
                item_wrap.css('max-height', max_height + 'px').osc_scroller('scrollToObj', scroll_to_obj);
            }
            
            var self = this;
            
            setTimeout(function() { self._lock_filter = false }, 500);
        }
        
        this.renderMulti = function() {            
            var self = this;
            
            this.skip_change_event = false;
            
            this.container.addClass('multiple');
            
            var item_wrap = $('<div />');
            var item_container = $('<div />');

            this.container.append(item_wrap);
            item_wrap.append(item_container);
            
            this.scroll_data = false;
            
            var restore_item = function(item) {
                if(item.attr('rel') == self.scroll_data.target_rel) {
                    return true;
                }
                
                item[item.attr('bakstate') == 1 ? 'addClass' : 'removeClass']('selected');
            }
            
            var process_item = function(item, skip_restore_sibling) {
                var action = self.scroll_data.action;
                
                var rel = parseInt(item.attr('rel'));
                
                if(rel == self.scroll_data.target_rel) {
                    item[action == 'select' ? 'addClass' : 'removeClass']('selected');
                } else {
                    if(action == 'select') {
                        item.addClass('selected');
                    } else if(item.attr('bakstate') == 1) {
                        item.removeClass('selected');
                    }
                }
                
                if(! skip_restore_sibling) {
                    if(rel < self.scroll_data.target_rel) {
                        item = item.prev();
                    } else if(rel > self.scroll_data.target_rel) {
                        item = item.next();
                    } else {
                        if(item.next()[0]) {
                            restore_item(item.next());
                        }

                        if(item.prev()[0]) {
                            restore_item(item.prev());                        
                        }

                        return;
                    }

                    if(item[0]) {
                        restore_item(item);
                    }
                }
            }
            
            var scroll_up = function() {
                clearTimeout(self.scroll_data.timer);
                
                if(self.scroll_data.scroll_item.prev()[0]) {
                    self.scroll_data.scroll_item = self.scroll_data.scroll_item.prev();                    
                    item_wrap.osc_scroller('scrollToObj', self.scroll_data.scroll_item);   
                    
                    var item = self.scroll_data.scroll_item;
                    
                    if(item[0]) {
                        process_item(item);
                    }
                    
                    self.scroll_data.timer = setTimeout(scroll_up, 50);
                }
            }
            
            var scroll_down = function() {
                clearTimeout(self.scroll_data.timer);                
                item_wrap.osc_scroller('scrollToObj', self.scroll_data.scroll_item);
                
                var item = self.scroll_data.scroll_item;
                
                for(var x = 0; x < self.scroll_data.item_per_scene; x ++) {
                    item = item.next();
                    
                    if(! item[0]) {
                        break;
                    }
                }

                if(item[0]) {
                    process_item(item);
                    
                    self.scroll_data.scroll_item = self.scroll_data.scroll_item.next();
                    self.scroll_data.timer = setTimeout(scroll_down, 50);
                }
            }
            
            var mouse_move_hook = function(e) {
                if(e.pageY < self.scroll_data.box_y) {
                    if(self.scroll_data.direction != 'up') {
                        self.scroll_data.direction = 'up';
                        scroll_up();
                    }
                } else if(e.pageY > self.scroll_data.box_y + self.scroll_data.box_h) {
                    if(self.scroll_data.direction != 'down') {
                        self.scroll_data.direction = 'down';
                        scroll_down();        
                    }
                } else {
                    clearTimeout(self.scroll_data.timer);
                    self.scroll_data.direction = null;
                    
                    var item = self.scroll_data.scroll_item;
                    
                    do {
                        if(parseInt(item.attr('rel')) > self.scroll_data.target_rel) {
                            if(item.offset().top > e.pageY) {
                                restore_item(item);
                            } else {
                                process_item(item, true);
                            }
                        } else if(parseInt(item.attr('rel')) < self.scroll_data.target_rel) {                            
                            if(item.offset().top + item.height() >= e.pageY) {
                                process_item(item, true);
                            } else {
                                restore_item(item);
                            }                            
                        }
                        
                        item = item.next();
                    } while(item[0] && item.offset().top <= self.scroll_data.box_y + self.scroll_data.box_h);
                }
            }
            
            var doc_mouse_up_hook = function() {
                clearTimeout(self.scroll_data.timer);
                
                self.skip_change_event = true;
                    
                self.scroll_data.items.each(function() {
                    var item = $(this);                        
                    self.select[0].options[item.attr('rel')].selected = item.hasClass('selected');
                });

                self.skip_change_event = false;

                $(document).unbind('mousemove', mouse_move_hook).unbind('mouseup', doc_mouse_up_hook);
                $(document.body).removeClass('osc-ui-frm-select-dis-sel');
                self.scroll_data = null;
            }
            
            for(var x = 0; x < this.select[0].options.length; x ++) {
                var label = this.select[0].options[x].label;

                var item = $('<div />').append($('<div />').html(label)).addClass('osc-ui-frm-select-menu-item').attr('title', label);

                item.attr('rel', x).mousedown(function(e) {
                    if(! $.browser.opera) {
                        if($.browser.msie) {
                            if(e.button == 2) {
                                return;                                
                            }
                        } else if(e.which == 3) {
                            return;
                        }
                    }   
                    
                    var item = $(this);
                    
                    var rel = parseInt(item.attr('rel'));
                    
                    var item_collection = $('.osc-ui-frm-select-menu-item', self.container[0]);
                    
                    var scroll_action = null;
                                                            
                    if(e.ctrlKey) {
                        item.toggleClass('selected');                        
                        scroll_action = item.hasClass('selected') ? 'select' : 'unselect';
                        
                        item_collection.each(function() {
                            var item = $(this);     
                            item.attr('bakstate', item.hasClass('selected') ? 1 : 0);
                        });
                    } else {
                        item_collection.each(function() {
                            var item = $(this);                            
                            item[item.attr('rel') == rel ? 'addClass' : 'removeClass']('selected');
                            item.attr('bakstate', item.hasClass('selected') ? 1 : 0);
                        });
                        
                        scroll_action = 'select';
                    }
                    
                    self.scroll_data = {
                        target_rel : rel,
                        target_h : item.height(),
                        item_per_scene : Math.floor(item_wrap.height()/item.height()),
                        target : item,
                        action : scroll_action,
                        box_y : item_wrap.offset().top,
                        box_h : item_wrap.height(),
                        items : item_collection,
                        scroll_item : null,
                        direction : null,
                        timer : null
                    };
                    
                    self.scroll_data.scroll_item = item;
                    
                    while(self.scroll_data.scroll_item.offset().top > self.scroll_data.box_y && self.scroll_data.scroll_item.prev()[0]) {
                        self.scroll_data.scroll_item = self.scroll_data.scroll_item.prev();
                    }
                    
                    if(self.scroll_data.scroll_item.next()[0]) {
                        self.scroll_data.scroll_item = self.scroll_data.scroll_item.next();
                    }
                    
                    $(document).bind('mousemove', mouse_move_hook).mouseup(doc_mouse_up_hook);
                    $(document.body).addClass('osc-ui-frm-select-dis-sel');
                });

                item_container.append(item);
            }
            
            if(this.select.css('width')) {
                this.container.width(parseInt(this.select.css('width')));
            }
            
            var box_height = parseInt(this.select.css('height'));
            
            if(isNaN(box_height) || box_height < 1) {
                box_height = this.size * $('.osc-ui-frm-select-menu-item', this.container[0]).height();
            }
            
            var mark_selected_item = function() {
                if(self.skip_change_event) {
                    return true;
                }
                
                $('.osc-ui-frm-select-menu-item', self.container[0]).each(function() {
                    var item = $(this);
                    item[self.select[0].options[item.attr('rel')].selected ? 'addClass' : 'removeClass']('selected');
                });
            }
            
            this.select.bind('change', mark_selected_item);
            
            mark_selected_item();
            
            item_wrap.css('max-height', box_height + 'px').osc_scroller();
        }
        
        if(typeof options == 'undefined') {
            options = {};
        }
        
        if(target.tagName == 'SELECT') {
            options.container = $('<div />').addClass('osc-ui-frm-select');
            $(target).after(options.container);
            $(options.container).append(target);
            options.select = $(target);
            var attr_keys = ['name','id','value','disabled','multiple','size'];
            
            for(var x = 0; x < attr_keys.length; x ++) {
                if(options.select.attr(attr_keys[x])) {
                    options[attr_keys[x]] = options.select.attr(attr_keys[x]);
                }
            }
        } else {
            options.container = $(target);
            options.select = $('<select />');
        }
        
        if(options.type) {
            options.container.addClass(options.type);
        }
        
        this.container = null;
        this.multiple = null;
        this.select = null;
        this.type = 1;
        this.name = null;
        this.value = null;
        this.disabled = false;
        this.dropbox_item_render = null;
        this.filter_frm = null;
        this.filter_frm_wrap = null;
        this.id = null;
        this.max_height = null;
        this._lock_filter = false;
        this._filter_timer = null;
        this.last_filter_keywords = '';
        this._hide_selector = false;
                                
        $.extend(this, options);
        
        this.max_height = parseInt(this.max_height);
        
        if(isNaN(this.max_height) || this.max_height < 1) {
            this.max_height = 0;
        }
        
        this.size = parseInt(this.size);
        
        if(isNaN(this.size) || this.size < 4) {            
            this.size = this.multiple ? 4 : 1;
        }

        this.transition_class = this.type < 2 ? 'transition-linear-0-05' : this.type > 2 ? 'transition-linear-0-15' : 'transition-linear-0-10';

        if(this.multiple) {
            this.renderMulti();
        } else {
            this.render();
        }
    }
    
    $.fn.osc_UIFormSelect = function() {        
        var func = null;
        
        if(arguments.length > 0 && typeof arguments[0] == 'string') {
            func = arguments[0];
        }
        
        if(func) {
            var opts = [];
        
            for(var x = 1; x < arguments.length; x ++) {
                opts.push(arguments[x]);
            }
        } else {
            opts = arguments[0];
        }
               
        return this.each(function() {
            var instance = $(this).data('osc-ui-frm-select');
                
            if(func) {
                if(instance) {
                    instance[func].apply(instance, opts);
                }
            } else {
                if(! instance) {
                    $(this).data('osc-ui-frm-select', new OSC_UI_Form_Select(this, opts));
                }
            }
        });
    }
    
    $(window).ready(function() {
        $('.mrk-ui-frm-select').each(function() {
            var obj = $(this);
            
            var opt_buff = obj.attr('rel') ? obj.attr('rel').split(';') : [];

            var opts = {};
            
            for(var x = 0; x < opt_buff.length; x ++) {
                var opt = opt_buff[x].split(':');
                
                if(opt.length != 2) {
                    continue;
                }
                
                opt[0] = opt[0].toString().trim();
                opt[1] = opt[1].toString().trim();
                
                if(opt[0] && opt[1]) {
                    opts[opt[0]] = opt[1];
                }
            }
           
            obj.osc_UIFormSelect(opts);            
        });
    });
})(jQuery);